{"remainingRequest":"D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Coding_Workspace\\VueJS\\projet_todo\\src\\Store\\modules\\todoStore.js","dependencies":[{"path":"D:\\Coding_Workspace\\VueJS\\projet_todo\\src\\Store\\modules\\todoStore.js","mtime":1616534018255},{"path":"D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBWdWV4IGZyb20gJ3Z1ZXgnOwpWdWUudXNlKFZ1ZXgpOwoKdmFyIHN0YXRlID0gZnVuY3Rpb24gc3RhdGUoKSB7CiAgcmV0dXJuIHsKICAgIHJlc3RhbnRlOiAwLAogICAgblRhc2s6ICcnLAogICAgY3VycmVudFRvZG86IFtdLAogICAgbkxpc3Q6ICcnLAogICAgdG9rZW46ICcnLAogICAgbGlzdHM6IFt7CiAgICAgICJpZCI6IDAsCiAgICAgICJ0aXRyZSI6ICdsaXN0IDEnLAogICAgICAidG9kb3MiOiBbewogICAgICAgICJpZCI6IDAsCiAgICAgICAgInRpdHJlIjogJ3RhY2hlIDEnLAogICAgICAgICJjb21wbGV0ZWQiOiBmYWxzZQogICAgICB9LCB7CiAgICAgICAgImlkIjogMSwKICAgICAgICAidGl0cmUiOiAndGFjaGUgMicsCiAgICAgICAgImNvbXBsZXRlZCI6IGZhbHNlCiAgICAgIH1dCiAgICB9LCB7CiAgICAgICJpZCI6IDEsCiAgICAgICJ0aXRyZSI6ICdsaXN0IDInLAogICAgICAidG9kb3MiOiBbewogICAgICAgICJpZCI6IDAsCiAgICAgICAgInRpdHJlIjogJ3RhY2hlIDEnLAogICAgICAgICJjb21wbGV0ZWQiOiBmYWxzZQogICAgICB9LCB7CiAgICAgICAgImlkIjogMSwKICAgICAgICAidGl0cmUiOiAndGFjaGUgMicsCiAgICAgICAgImNvbXBsZXRlZCI6IGZhbHNlCiAgICAgIH0sIHsKICAgICAgICAiaWQiOiAzLAogICAgICAgICJ0aXRyZSI6ICd0YWNoZSAzJywKICAgICAgICAiY29tcGxldGVkIjogZmFsc2UKICAgICAgfV0KICAgIH1dCiAgfTsKfTsKCnZhciBnZXR0ZXJzID0gewogIGdldEN1cnJlbnRUb2RvOiBmdW5jdGlvbiBnZXRDdXJyZW50VG9kbyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmN1cnJlbnRUb2RvOwogIH0sCiAgZ2V0TGlzdHM6IGZ1bmN0aW9uIGdldExpc3RzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUubGlzdHM7CiAgfSwKICBuTGlzdDogZnVuY3Rpb24gbkxpc3Qoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5uTGlzdDsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgLy9Qb3VyIGxlcyB0b2RvcwogIGNvbXBsZXRlVGFzazogZnVuY3Rpb24gY29tcGxldGVUYXNrKHN0YXRlLCBpbmRleCkgewogICAgaWYgKHN0YXRlLmN1cnJlbnRUb2RvW2luZGV4XS5jb21wbGV0ZWQpIHsKICAgICAgc3RhdGUuY3VycmVudFRvZG9baW5kZXhdLmNvbXBsZXRlZCA9IGZhbHNlOwogICAgfSBlbHNlIHsKICAgICAgc3RhdGUuY3VycmVudFRvZG9baW5kZXhdLmNvbXBsZXRlZCA9IHRydWU7CiAgICB9CiAgfSwKICBzdXBwcmltZXJUYXNrOiBmdW5jdGlvbiBzdXBwcmltZXJUYXNrKHN0YXRlLCBpbmRleCkgewogICAgc3RhdGUuY3VycmVudFRvZG8gPSBzdGF0ZS5jdXJyZW50VG9kby5zbGljZSgwLCBpbmRleCkuY29uY2F0KHN0YXRlLmN1cnJlbnRUb2RvLnNsaWNlKGluZGV4ICsgMSkpOwogICAgc3RhdGUucmVzdGFudGUgPSBzdGF0ZS5jdXJyZW50VG9kby5sZW5ndGg7CiAgfSwKICBhZGRUYXNrOiBmdW5jdGlvbiBhZGRUYXNrKHN0YXRlKSB7CiAgICBpZiAoc3RhdGUublRhc2sgIT0gJycpIHsKICAgICAgc3RhdGUuY3VycmVudFRvZG8ucHVzaCh7CiAgICAgICAgaWQ6IHN0YXRlLmN1cnJlbnRUb2RvLmxlbmd0aCwKICAgICAgICB0aXRyZTogc3RhdGUublRhc2ssCiAgICAgICAgY29tcGxldGVkOiBmYWxzZQogICAgICB9KTsKICAgICAgc3RhdGUucmVzdGFudGUgPSBzdGF0ZS5jdXJyZW50VG9kby5sZW5ndGg7CiAgICAgIHN0YXRlLm5UYXNrID0gJyc7CiAgICB9IGVsc2UgewogICAgICBjb25zb2xlLmxvZygnRXJyZXVyIG5vbSB2aWRlJyk7CiAgICB9CiAgfSwKICBzZXROVGFzazogZnVuY3Rpb24gc2V0TlRhc2soc3RhdGUsIG5UKSB7CiAgICBzdGF0ZS5uVGFzayA9IG5UOwogIH0sCiAgLy9Qb3VyIGxlcyBsaXN0ZXMKICBzdXBwcmltZXJMaXN0OiBmdW5jdGlvbiBzdXBwcmltZXJMaXN0KHN0YXRlLCBpbmRleCkgewogICAgc3RhdGUubGlzdHMgPSBzdGF0ZS5saXN0cy5zbGljZSgwLCBpbmRleCkuY29uY2F0KHN0YXRlLmxpc3RzLnNsaWNlKGluZGV4ICsgMSkpOwogIH0sCiAgYWRkTGlzdDogZnVuY3Rpb24gYWRkTGlzdChzdGF0ZSkgewogICAgaWYgKHN0YXRlLm5MaXN0ICE9ICcnKSB7CiAgICAgIHN0YXRlLmxpc3RzLnB1c2goewogICAgICAgIGlkOiBzdGF0ZS5saXN0cy5sZW5ndGgsCiAgICAgICAgdGl0cmU6IHN0YXRlLm5MaXN0LAogICAgICAgIHRvZG9zOiBbXQogICAgICB9KTsKICAgICAgc3RhdGUubkxpc3QgPSAnJzsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnNvbGUubG9nKCdFcnJldXIgbm9tIHZpZGUnKTsKICAgIH0KICB9LAogIGFmZmljaGVMaXN0ZUlEOiBmdW5jdGlvbiBhZmZpY2hlTGlzdGVJRChzdGF0ZSwgaWQpIHsKICAgIHN0YXRlLmN1cnJlbnRUb2RvID0gc3RhdGUubGlzdHNbaWRdLnRvZG9zOwogIH0sCiAgc2V0Tkxpc3Q6IGZ1bmN0aW9uIHNldE5MaXN0KHN0YXRlLCBuZXdMKSB7CiAgICBzdGF0ZS5uTGlzdCA9IG5ld0w7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["D:/Coding_Workspace/VueJS/projet_todo/src/Store/modules/todoStore.js"],"names":["Vue","Vuex","use","state","restante","nTask","currentTodo","nList","token","lists","getters","getCurrentTodo","getLists","mutations","completeTask","index","completed","supprimerTask","slice","concat","length","addTask","push","id","titre","console","log","setNTask","nT","supprimerList","addList","todos","afficheListeID","setNList","newL","namespaced"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst state = () => ({\r\n        restante: 0,\r\n        nTask: '',\r\n        currentTodo: [],\r\n        nList: '',\r\n        token: '',\r\n        lists: [\r\n            {\r\n                \"id\": 0,\r\n                \"titre\" : 'list 1',\r\n                \"todos\" : [\r\n                    {\r\n                        \"id\": 0,\r\n                        \"titre\" : 'tache 1',\r\n                        \"completed\": false,\r\n                    },\r\n                    {\r\n                        \"id\": 1,\r\n                        \"titre\" : 'tache 2',\r\n                        \"completed\": false,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 1,\r\n                \"titre\": 'list 2',\r\n                \"todos\": [\r\n                    {\r\n                        \"id\": 0,\r\n                        \"titre\": 'tache 1',\r\n                        \"completed\": false,\r\n                    },\r\n                    {\r\n                        \"id\": 1,\r\n                        \"titre\": 'tache 2',\r\n                        \"completed\": false,\r\n                    },\r\n                    {\r\n                        \"id\": 3,\r\n                        \"titre\": 'tache 3',\r\n                        \"completed\": false,\r\n                    },\r\n                ],\r\n            }\r\n        ]\r\n})\r\n\r\nconst getters = {\r\n    getCurrentTodo: (state) => {\r\n        return state.currentTodo\r\n    },\r\n    getLists: (state) => {\r\n        return state.lists\r\n    },\r\n    nList:(state) => {\r\n        return state.nList\r\n    }\r\n}\r\n\r\nconst mutations = {\r\n    //Pour les todos\r\n    completeTask(state, index) {\r\n        if (state.currentTodo[index].completed) {\r\n            state.currentTodo[index].completed = false\r\n        } else {\r\n            state.currentTodo[index].completed = true\r\n        }\r\n    },\r\n\r\n    supprimerTask(state, index) {\r\n        state.currentTodo = state.currentTodo.slice(0, index).concat(state.currentTodo.slice(index + 1))\r\n        state.restante = state.currentTodo.length\r\n    },\r\n\r\n    addTask(state) {\r\n        if (state.nTask != '') {\r\n            state.currentTodo.push({id: state.currentTodo.length, titre: state.nTask, completed: false})\r\n            state.restante = state.currentTodo.length\r\n            state.nTask = ''\r\n        } else {\r\n            console.log('Erreur nom vide');\r\n        }\r\n    },\r\n\r\n    setNTask(state, nT){\r\n      state.nTask = nT\r\n    },\r\n\r\n    //Pour les listes\r\n    supprimerList(state, index) {\r\n        state.lists = state.lists.slice(0, index).concat(state.lists.slice(index + 1))\r\n    },\r\n    addList(state) {\r\n        if (state.nList != '') {\r\n            state.lists.push({id: state.lists.length, titre: state.nList, todos: []})\r\n            state.nList = '';\r\n        } else {\r\n            console.log('Erreur nom vide');\r\n        }\r\n    },\r\n\r\n    afficheListeID(state, id) {\r\n        state.currentTodo = state.lists[id].todos\r\n    },\r\n\r\n    setNList(state, newL) {\r\n        state.nList = newL\r\n    }\r\n}\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    mutations,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}]}