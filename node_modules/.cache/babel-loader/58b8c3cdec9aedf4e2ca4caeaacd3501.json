{"remainingRequest":"D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\babel-loader\\lib\\index.js!D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Coding_Workspace\\VueJS\\projet_todo\\src\\components\\todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Coding_Workspace\\VueJS\\projet_todo\\src\\components\\todo.vue","mtime":1616511766872},{"path":"D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Coding_Workspace\\VueJS\\projet_todo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovQ29kaW5nX1dvcmtzcGFjZS9WdWVKUy9wcm9qZXRfdG9kby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBHZXR0ZXJzLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoewogICAgblQ6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlWyJ0b2RvL25UYXNrIl07CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbHVlKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCd0b2RvL3NldE5UYXNrJywgdmFsdWUpOwogICAgICB9CiAgICB9CiAgfSwgbWFwU3RhdGUoJ3RvZG8nLCB7CiAgICByZXN0OiAncmVzdGFudGUnCiAgfSkpLCBtYXBHZXR0ZXJzKCd0b2RvJywgewogICAgY3VycmVudFQ6ICdnZXRDdXJyZW50VG9kbycKICB9KSksCiAgbWV0aG9kczogX29iamVjdFNwcmVhZCh7fSwgbWFwTXV0YXRpb25zKCd0b2RvJywgWydjb21wbGV0ZVRhc2snLCAiYWRkVGFzayIsICJzdXBwcmltZXJUYXNrIl0pKSwKICBuYW1lOiAidG9kbyIKfTs="},{"version":3,"sources":["todo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,QAAA,EAAA,UAAA,EAAA,YAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,QAAA;AACA,IAAA,EAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAAA,CAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA,KAAA;AACA;AANA;AADA,KASA,QAAA,CAAA,MAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAAA,CATA,GAYA,UAAA,CAAA,MAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAAA,CAZA,CADA;AAiBA,EAAA,OAAA,oBACA,YAAA,CAAA,MAAA,EAAA,CAAA,cAAA,EAAA,SAAA,EAAA,eAAA,CAAA,CADA,CAjBA;AAqBA,EAAA,IAAA,EAAA;AArBA,CAAA","sourcesContent":["<template>\r\n  <div id=\"todo\">\r\n    <h1>Tâches à réaliser</h1>\r\n    <b>filtre</b> :\r\n    <button type=\"button\" v-on:click=\"$store.commit('filterTask', 'all')\">Tous</button>&nbsp;&nbsp;\r\n    <button type=\"button\" v-on:click=\"$store.commit('filterTask','comp')\">Completés</button>&nbsp;&nbsp;\r\n    <button type=\"button\" v-on:click=\"$store.commit('filterTask','nComp')\">Non Complétés</button><br><br>\r\n    Nombre de tâches restantes : {{ rest }}\r\n\r\n    <ul>\r\n      <li v-for=\"(todo,index) in currentT\" :key=\"index\">\r\n        {{ todo.titre }} {{ todo.completed }}\r\n        <input type=\"checkbox\" id=\"fTask\" v-on:change=\"completeTask(index)\">\r\n        <label for=\"fTask\">Fini ? </label>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <button type=\"button\" class=\"btn btn-danger\"\r\n                v-on:click=\"supprimerTask(index)\">X\r\n        </button>\r\n        <br><br>\r\n      </li>\r\n    </ul>\r\n\r\n    <div id=\"nouvelleTask\">\r\n      <label for=\"nTask\">Nouvelle tâche : </label>&nbsp;\r\n      <input type=\"text\" id=\"nTask\" v-model=\"nT\" v-on:change=\"nT.set()\">&nbsp;&nbsp;\r\n      <button type=\"button\" class=\"btn btn-success\" v-on:click=\"addTask\">+</button>\r\n      <br><br>\r\n      ntask : {{ nTask }}\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapMutations } from 'vuex'\r\n\r\nexport default {\r\n  computed:{\r\n    nT : {\r\n      get(){\r\n        return this.$store.state[\"todo/nTask\"]\r\n      },\r\n      set(value){\r\n        this.$store.commit('todo/setNTask', value)\r\n      },\r\n    },\r\n    ...mapState('todo', {\r\n      rest: 'restante',\r\n    }),\r\n    ...mapGetters('todo', {\r\n      currentT: 'getCurrentTodo',\r\n    }),\r\n  },\r\n  methods:{\r\n    ...mapMutations('todo', ['completeTask', \"addTask\", \"supprimerTask\"]),\r\n  },\r\n\r\n  name:\"todo\"\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n  h1 {\r\n    color:lightgray;\r\n  }\r\n\r\n  #todo{\r\n    border: black;\r\n    border-style: solid;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}